{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js","webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Header","title","site","siteMetadata","className","headerStyles","header","to","navList","navItem","activeClassName","activeNavItem","Footer","author","Layout","props","layoutStyles","container","content","children","ContactMe","href","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"mKAqEeA,EAhEA,WACb,IAUQC,EAVE,OAUaC,KAAKC,aAApBF,MAER,OACI,4BAAQG,UAAWC,IAAaC,QAC9B,4BACE,kBAAC,IAAD,CAAMF,UAAWC,IAAaJ,MAAOM,GAAG,KACrCN,IAGL,6BACE,wBAAIG,UAAWC,IAAaG,SAC1B,4BACE,kBAAC,IAAD,CACEJ,UAAWC,IAAaI,QACxBC,gBAAiBL,IAAaM,cAC9BJ,GAAG,KAHL,SAQF,4BACE,kBAAC,IAAD,CACEH,UAAWC,IAAaI,QACxBC,gBAAiBL,IAAaM,cAC9BJ,GAAG,SAHL,SAQF,4BACE,kBAAC,IAAD,CACEH,UAAWC,IAAaI,QACxBC,gBAAiBL,IAAaM,cAC9BJ,GAAG,UAHL,UAQF,4BACE,kBAAC,IAAD,CACEH,UAAWC,IAAaI,QACxBC,gBAAiBL,IAAaM,cAC9BJ,GAAG,YAHL,gB,YChCCK,EApBA,WACb,IAUQC,EAVE,OAUcX,KAAKC,aAArBU,OAER,OACI,gCACE,yCAAeA,EAAf,qB,iCCEOC,IAZA,SAACC,GACd,OACE,yBAAKX,UAAWY,IAAaC,WAC3B,yBAAKb,UAAWY,IAAaE,SAC3B,kBAAC,EAAD,MACGH,EAAMI,UAEX,kBAAC,EAAD,S,oCCfN,4CAkBeC,UAdG,WAChB,OACI,kBAAC,IAAD,KACE,mDACA,4BACE,qDACA,2DACA,wCAAa,uBAAGC,KAAK,8BAAR,e,uJCXvB,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,2IChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-contact-js-7b3275271fddd04e57e2.js","sourcesContent":["import React from 'react';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\n\nimport headerStyles from './Header.module.scss';\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const { title } = data.site.siteMetadata;\n\n  return (\n      <header className={headerStyles.header}>\n        <h1>\n          <Link className={headerStyles.title} to=\"/\">\n            {title}\n          </Link>\n        </h1>\n        <nav>\n          <ul className={headerStyles.navList}>\n            <li>\n              <Link \n                className={headerStyles.navItem} \n                activeClassName={headerStyles.activeNavItem}\n                to=\"/\"\n              >\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link \n                className={headerStyles.navItem} \n                activeClassName={headerStyles.activeNavItem}\n                to=\"/blog\"\n              >\n                Blog\n              </Link>\n            </li>\n            <li>\n              <Link \n                className={headerStyles.navItem} \n                activeClassName={headerStyles.activeNavItem}\n                to=\"/about\"\n              >\n                About\n              </Link>\n            </li>\n            <li>\n              <Link \n                className={headerStyles.navItem} \n                activeClassName={headerStyles.activeNavItem}\n                to=\"/contact\"\n              >\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n\n  return (\n      <footer>\n        <p>Created by {author} with Gatsby.js</p>\n      </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport '../styles/index.scss';\nimport layoutStyles from './Layout.module.scss';\n\nconst Layout = (props) => {\n  return (\n    <div className={layoutStyles.container}>\n      <div className={layoutStyles.content}>\n        <Header />\n          {props.children}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;","import React from 'react';\n\nimport Layout from '../components/Layout';\n\nconst ContactMe = () => {\n  return (\n      <Layout>\n        <h2>Contact information</h2>\n        <ul>\n          <li>Telefone: 12347575775</li>\n          <li>Email: edujtm@somewhere.com</li>\n          <li>Twitter: <a href=\"https://twitter.com/edujtm\">edujtm</a></li>\n        </ul>\n      </Layout>\n  );\n};\n\n\nexport default ContactMe;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}